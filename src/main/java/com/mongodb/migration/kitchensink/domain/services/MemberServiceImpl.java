/*
 * This file was generated by the migration tool. Do not modify it manually.
 */

package com.mongodb.migration.kitchensink.domain.services;

import com.mongodb.migration.kitchensink.domain.model.Member;
import com.mongodb.migration.kitchensink.domain.ports.incoming.MemberService;
import com.mongodb.migration.kitchensink.domain.ports.outgoing.MemberRepository;
import java.util.List;
import java.util.Optional;
import org.springframework.stereotype.Service;

/** Implementation of the MemberService interface. */
@Service
public class MemberServiceImpl implements MemberService {

  private final MemberRepository memberRepository;

  public MemberServiceImpl(MemberRepository memberRepository) {
    this.memberRepository = memberRepository;
  }

  @Override
  public Member registerMember(Member member) throws Exception {
    if (emailAlreadyExists(member.getEmail())) {
      throw new Exception("Email already exists");
    }
    return memberRepository.save(member);
  }

  @Override
  public Optional<Member> findMemberById(String id) {
    return memberRepository.findById(id);
  }

  @Override
  public Optional<Member> findMemberByEmail(String email) {
    return memberRepository.findByEmail(email);
  }

  @Override
  public List<Member> listAllMembers() {
    return memberRepository.findAllOrderedByName();
  }

  @Override
  public void deleteMember(String id) {
    memberRepository.delete(id);
  }

  private boolean emailAlreadyExists(String email) {
    return memberRepository.findByEmail(email).isPresent();
  }
}
